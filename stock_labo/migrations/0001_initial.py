# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-02-22 21:23
from __future__ import unicode_literals

import MyFields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contenant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', MyFields.CharField(blank=True, default=None, max_length=30, null=True, unique=True, verbose_name='Code')),
                ('actuel_emplacement', MyFields.CharField(blank=True, default='', max_length=30, verbose_name='Emplacement actuel')),
                ('stock_emplacement', MyFields.CharField(blank=True, default='', max_length=30, verbose_name='Emplacement de stockage')),
                ('tare', MyFields.FloatField(blank=True, default=None, help_text='g', null=True, verbose_name='Poids vide du contenant')),
                ('poids', MyFields.FloatField(blank=True, default=None, help_text='g', null=True, verbose_name='Quantit\xe9 de mati\xe8re')),
                ('date_creation', MyFields.DateField(default=None, verbose_name='Date de cr\xe9ation')),
                ('date_reception', MyFields.DateField(blank=True, default=None, null=True, verbose_name='Date de r\xe9ception')),
                ('date_suppression', MyFields.DateField(blank=True, default=None, null=True, verbose_name='Date de destruction')),
                ('date_fin_validite', MyFields.DateField(blank=True, default=None, null=True, verbose_name='Date de fin de validit\xe9')),
                ('seuil_alarme', MyFields.IntegerField(blank=True, default=None, help_text='g', null=True, verbose_name='Alarme r\xe9approvisionnement')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ContenantStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenant_type_code', MyFields.CharField(blank=True, default=None, max_length=30, null=True)),
                ('contenant_code', MyFields.CharField(blank=True, default=None, max_length=30, null=True)),
                ('contenant_date_creation', MyFields.DateField(default=None)),
                ('contenant_responsable_creation_login', MyFields.CharField(blank=True, default=None, max_length=30, null=True)),
                ('contenant_provenance_site_code', models.CharField(blank=True, default=None, max_length=30, null=True)),
                ('contenant_provenance_site_description', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('contenant_date_suppression', MyFields.DateField(blank=True, default=None, null=True)),
                ('contenant_responsable_suppression_login', MyFields.CharField(blank=True, default=None, max_length=30, null=True)),
                ('nomenclature_lot_code', MyFields.CharField(blank=True, default=None, max_length=30, null=True)),
                ('nomenclature_lot_client', MyFields.CharField(blank=True, default=None, max_length=50, null=True)),
                ('nomenclature_lot_projet', MyFields.CharField(blank=True, default=None, max_length=50, null=True)),
                ('nomenclature_lot_poids_reference', MyFields.FloatField(blank=True, default=None, null=True)),
                ('nomenclature_code', MyFields.CharField(blank=True, default=None, max_length=30, null=True)),
                ('nomenclature_description', MyFields.CharField(blank=True, default=None, max_length=100, null=True)),
                ('nomenclature_type_code', models.CharField(blank=True, default=None, max_length=30, null=True)),
                ('nomenclature_type_description', models.CharField(blank=True, default=None, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContenantType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', MyFields.CharField(max_length=30, unique=True, verbose_name='Code')),
                ('description', MyFields.CharField(max_length=100, verbose_name='Description')),
                ('capacite', MyFields.FloatField(help_text='g', verbose_name='Capacit\xe9 du Contenant')),
                ('tare', MyFields.FloatField(help_text='g', verbose_name='Tare')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='droits_fonctions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': (('article', 'Article'), ('article_nettoyage', 'Article Nettoyage'), ('recherche', 'Recherche'), ('mouvement', 'Mouvement'), ('panier', 'Panier'), ('stock_perso', 'Stock de travail'), ('param_perso', 'Mes Param\xe8tres'), ('import', 'Import'), ('reception', 'R\xe9ception'), ('sample_lab', 'Sample Lab'), ('flash', 'Point \xc9clair'), ('log', 'Log')),
            },
        ),
        migrations.CreateModel(
            name='FlashPointHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomenclature_code', MyFields.CharField(max_length=30, verbose_name='Code')),
                ('nomenclature_description', MyFields.CharField(blank=True, default='', max_length=100, verbose_name='Description')),
                ('nomenclature_lot_code', MyFields.CharField(max_length=30, verbose_name='Lot')),
                ('date_flash_point', MyFields.DateField(blank=True, default=None, null=True, verbose_name='Date Flash')),
                ('flash_point', MyFields.FloatField(blank=True, default=None, help_text='\xb0C', null=True, verbose_name='Flash')),
                ('responsable_flash_point_login', MyFields.CharField(blank=True, default=None, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FlashPointMachine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_empl_code', MyFields.CharField(max_length=30, verbose_name='Code')),
                ('machine_empl_description', MyFields.CharField(blank=True, default='', max_length=100, verbose_name='Description')),
            ],
            options={
                'ordering': ['machine_empl_code'],
            },
        ),
        migrations.CreateModel(
            name='Impression',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
                ('etiquette_format', models.IntegerField(choices=[(1, 'ZPL'), (2, 'PDF'), (3, 'HTML2PDF')], verbose_name="Format de l'impression")),
                ('imp_auto', models.BooleanField(default=False, help_text='Impression sans apper\xe7u', verbose_name='Impression automatique')),
            ],
            options={
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='ImpressionDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', MyFields.CharField(blank=True, default='', max_length=100, verbose_name='nom du champs')),
                ('impression_detail_type', MyFields.IntegerField(choices=[(1, 'Data'), (2, 'Text libre'), (3, 'Image'), (11, 'Carre'), (12, 'Cercle'), (13, 'Ligne'), (21, 'Mod\xe8le')], default='1', help_text='???', verbose_name='Type de champ')),
                ('champ_data', MyFields.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='Donn\xe9e \xe0 imprimer')),
                ('pos_x', MyFields.IntegerField(blank=True, default=None, null=True, verbose_name='Position en X')),
                ('pos_y', MyFields.IntegerField(blank=True, default=None, null=True, verbose_name='Position Y')),
                ('police', MyFields.IntegerField(blank=True, choices=[(1, 'Plein Text'), (11, 'Code 39'), (12, 'Code 128'), (13, 'Code QR'), (14, 'Code Datamatrix')], default=None, null=True, verbose_name="Police d'\xe9criture")),
                ('orientation', MyFields.IntegerField(blank=True, default=None, null=True, verbose_name='Orientation du text')),
                ('param1', MyFields.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='Parametre 1')),
                ('param2', MyFields.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='Parametre 2')),
                ('couleur', MyFields.CharField(blank=True, default=None, help_text='0,0,0,L => 255,255,255,R', max_length=30, null=True, verbose_name='Couleur RVB + Alignement')),
                ('impression', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock_labo.Impression')),
            ],
            options={
                'ordering': ['impression', 'description'],
            },
        ),
        migrations.CreateModel(
            name='ImpressionImprimante',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
                ('largeur', models.IntegerField(default='210', help_text='mm', verbose_name="Largeur de l'\xe9tiquette/page")),
                ('longueur', models.IntegerField(default='297', help_text='mm', verbose_name="Longueur de l'\xe9tiquette/page")),
                ('resolution', models.IntegerField(default='300', help_text='dpi', verbose_name="R\xe9solution de l'imprimante (Zebra)")),
                ('imprimante_port', models.CharField(blank=True, default=None, help_text='Inutile pour les format PDF', max_length=100, null=True)),
            ],
            options={
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='ImpressionImprimanteParam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='ImpressionImprimanteParamDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', MyFields.CharField(blank=True, default='', max_length=100, verbose_name='nom du champs')),
                ('champ_data', MyFields.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='code imprimante')),
                ('impression_imprimante_param', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock_labo.ImpressionImprimanteParam')),
            ],
            options={
                'ordering': ['impression_imprimante_param'],
            },
        ),
        migrations.CreateModel(
            name='Nomenclature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', MyFields.CharField(max_length=30, unique=True, verbose_name='Code')),
                ('description', MyFields.CharField(blank=True, default='', max_length=100, verbose_name='Description')),
                ('commentaire', MyFields.TextField(blank=True, default='', max_length=255, verbose_name='Commentaire')),
                ('reception_emplacement', MyFields.CharField(blank=True, default='', max_length=30, verbose_name='Emplacement de stockage par d\xe9faut')),
                ('date_creation', MyFields.DateField(blank=True, default=None, null=True, verbose_name='Date de Cr\xe9ation')),
                ('date_suppression', MyFields.DateField(blank=True, default=None, null=True, verbose_name='Date de destruction')),
                ('duree_validite', MyFields.IntegerField(default=90, verbose_name='Dur\xe9e de validit\xe9')),
                ('collection', MyFields.BooleanField(default=False, help_text='Article en collection', verbose_name='Collection')),
                ('date_collection', MyFields.DateField(blank=True, default=None, null=True, verbose_name='Date collection')),
                ('date_flash_point', MyFields.DateField(blank=True, default=None, null=True, verbose_name='Date Flash')),
                ('flash_point', MyFields.FloatField(blank=True, default=None, help_text='\xb0C', null=True, verbose_name='Flash')),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='NomenclatureLot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', MyFields.CharField(max_length=30, verbose_name='Lot')),
                ('date_creation', MyFields.DateField(blank=True, default=None, null=True, verbose_name='Date de fabrication')),
                ('date_fin_validite', MyFields.DateField(blank=True, default=None, null=True, verbose_name='Fin de validit\xe9')),
                ('date_suppression', MyFields.DateField(blank=True, default=None, null=True, verbose_name='Date de destruction')),
                ('definition', MyFields.BooleanField(default=False, help_text='Mise \xe0 jour automatique', verbose_name='Composition disponible')),
                ('commentaire', MyFields.TextField(blank=True, default='', max_length=255, verbose_name='Commentaire')),
                ('client', MyFields.CharField(blank=True, default='', max_length=50, verbose_name='Nom du client')),
                ('client_ka', MyFields.CharField(blank=True, default='', max_length=50, verbose_name='Nom du client KA')),
                ('projet', MyFields.CharField(blank=True, default='', max_length=50, verbose_name='N\xb0 de projet')),
                ('poids_reference', MyFields.FloatField(blank=True, default=None, help_text='g', null=True, verbose_name='Quantit\xe9 de r\xe9f\xe9rence')),
                ('num_roxane', MyFields.CharField(blank=True, default='', max_length=12, verbose_name='N\xb0 Roxane')),
                ('nbr_ligne_robot', MyFields.IntegerField(blank=True, default=None, null=True, verbose_name='Nbr Roxane')),
                ('nbr_ligne_manuel', MyFields.IntegerField(blank=True, default=None, null=True, verbose_name='Nbr Manuel')),
                ('date_flash_point', MyFields.DateField(blank=True, default=None, null=True, verbose_name='Date Flash')),
                ('flash_point', MyFields.FloatField(blank=True, default=None, help_text='\xb0C', null=True, verbose_name='Flash')),
                ('nomenclature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock_labo.Nomenclature', verbose_name='Article')),
                ('responsable_creation', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsable_c', to=settings.AUTH_USER_MODEL, verbose_name='Responsable creation')),
                ('responsable_flash_point', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nomenclature_lot_responsable_fp', to=settings.AUTH_USER_MODEL, verbose_name='Responsable Flash')),
            ],
            options={
                'ordering': ['date_creation'],
            },
        ),
        migrations.CreateModel(
            name='NomenclatureLotIngredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poids', MyFields.FloatField(default=0, help_text='g', verbose_name='Poids \xe0 doser')),
                ('doser', MyFields.FloatField(default=0, help_text='g', verbose_name='Poids dos\xe9')),
                ('tol_pos', MyFields.FloatField(blank=True, default=None, help_text='g', null=True, verbose_name='Tol\xe9rence positive')),
                ('tol_neg', MyFields.FloatField(blank=True, default=None, help_text='g', null=True, verbose_name='Tol\xe9rence negative')),
                ('valide', MyFields.IntegerField(choices=[(0, 'Non dos\xe9'), (1, 'Tol\xe9rence !!!!'), (10, 'Sous-Dos\xe9'), (20, 'Dosage OK'), (30, 'Sur-Dos\xe9')], default=0, verbose_name='Execution du dosage')),
                ('definition', MyFields.BooleanField(default=False, help_text='Mise \xe0 jour automatique', verbose_name='Dosage disponible')),
                ('formule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock_labo.NomenclatureLot', verbose_name='Formule')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock_labo.Nomenclature', verbose_name='Ingr\xe9dient')),
            ],
            options={
                'ordering': ['ingredient'],
            },
        ),
        migrations.CreateModel(
            name='NomenclatureLotIngredientDosage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doser', MyFields.FloatField(default=0, help_text='g', verbose_name='Poids dos\xe9')),
                ('contenant_code', MyFields.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='Code Contenant Utilis\xe9 pour le dosage')),
                ('lot', MyFields.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='Code Lot Utilis\xe9 pour le dosage')),
                ('responsable_login', MyFields.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='Responsable de pes\xe9e')),
                ('date_dosage', MyFields.DateTimeField(default=None, help_text='YYYY-MM-DD HH:MM:SS', verbose_name='Date de Dosage')),
                ('nomenclature_lot_ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock_labo.NomenclatureLotIngredient', verbose_name="Dosage de l'article")),
                ('responsable', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'ordering': ['nomenclature_lot_ingredient'],
            },
        ),
        migrations.CreateModel(
            name='NomenclatureLotStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', MyFields.CharField(blank=True, default=None, max_length=30, null=True)),
                ('nomenclature_code', MyFields.CharField(blank=True, default=None, max_length=30, null=True)),
                ('nomenclature_description', MyFields.CharField(blank=True, default=None, max_length=100, null=True)),
                ('nomenclature_type_code', models.CharField(blank=True, default=None, max_length=30, null=True)),
                ('date_creation', MyFields.DateField(blank=True, default=None, null=True)),
                ('client', MyFields.CharField(blank=True, default=None, max_length=50, null=True)),
                ('client_ka', MyFields.CharField(blank=True, default=None, max_length=50, null=True)),
                ('projet', MyFields.CharField(blank=True, default=None, max_length=50, null=True)),
                ('poids_reference', MyFields.FloatField(blank=True, default=None, null=True)),
                ('num_roxane', MyFields.CharField(blank=True, default=None, max_length=12, null=True)),
                ('nbr_ligne_robot', MyFields.IntegerField(blank=True, default=None, null=True)),
                ('nbr_ligne_manuel', MyFields.IntegerField(blank=True, default=None, null=True)),
                ('responsable_creation_login', MyFields.CharField(blank=True, default=None, max_length=30, null=True)),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='NomenclatureType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, unique=True, verbose_name='Code')),
                ('description', models.CharField(max_length=100, verbose_name='Description')),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='OracleClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projet', MyFields.CharField(blank=True, default=None, max_length=30, null=True)),
                ('client', MyFields.CharField(blank=True, default=None, max_length=30, null=True)),
                ('client_ka', MyFields.CharField(blank=True, default=None, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SampleLabStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projet', MyFields.CharField(blank=True, default=None, max_length=50, null=True)),
                ('client', MyFields.CharField(blank=True, default=None, max_length=50, null=True)),
                ('client_ka', MyFields.CharField(blank=True, default=None, max_length=50, null=True)),
                ('date_realisation', MyFields.DateField(default=None, null=True)),
                ('nbr_echantillon', MyFields.IntegerField(default=None, null=True, verbose_name='Nbr \xc9chantillon')),
                ('type_demande', MyFields.IntegerField(choices=[('', '---------'), (1, 'EDT (eau de toilette)'), (2, 'Pr\xe9sentation marketing'), (3, 'Make orders'), (4, 'Solution MP'), (5, 'Oil')], default=None, null=True, verbose_name='Type de demande')),
                ('responsable', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Responsable fabrication')),
            ],
            options={
                'ordering': ['date_realisation'],
            },
        ),
        migrations.CreateModel(
            name='SiteEntrepotMagasin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'ordering': ['site', 'entrepot', 'magasin'],
            },
        ),
        migrations.CreateModel(
            name='StockEntrepot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, unique=True, verbose_name='Code site')),
                ('description', models.CharField(max_length=100, verbose_name='Description')),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='StockMagasin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, unique=True, verbose_name='Code magasin')),
                ('description', models.CharField(max_length=100, verbose_name='Description')),
                ('stock_magasin_type', models.IntegerField(choices=[(10, 'Stockage'), (20, 'Navette'), (30, 'Personnel'), (100, 'Poubelle/Destruction')], default=10, verbose_name='Type de magasin')),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='StockSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, unique=True, verbose_name='Code site')),
                ('description', models.CharField(max_length=100, verbose_name='Description')),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='UnitMasse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, unique=True, verbose_name="Code de l'unit\xe9")),
                ('description', models.CharField(max_length=100, verbose_name='Description')),
                ('facteur', models.FloatField(help_text='Example: g  : Gramme : 1         kg : Kilogramme : 0.001         mg : Milligramme : 1000', verbose_name='Facteur de convertion')),
            ],
            options={
                'ordering': ['facteur'],
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial', models.CharField(blank=True, default='', max_length=5, verbose_name='Initial de la personne')),
                ('emplacement_perso', models.CharField(blank=True, default='', max_length=30, verbose_name='Emplacement personel par d\xe9faut')),
                ('entrepot_perso', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='stock_labo.StockEntrepot', verbose_name='Stock personel par d\xe9faut')),
                ('etiquette_contenant', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='etiquette_contenant', to='stock_labo.Impression', verbose_name='Etiquette contenant')),
                ('etiquette_contenant_imprimante', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='imprimante_etiquette_contenant', to='stock_labo.ImpressionImprimante', verbose_name='Imprimante \xe9tiquette contenant')),
                ('etiquette_emplacement', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='etiquette_emplacement', to='stock_labo.Impression', verbose_name='Etiquette emplacement')),
                ('etiquette_emplacement_imprimante', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='imprimante_etiquette_emplacement', to='stock_labo.ImpressionImprimante', verbose_name='Imprimante \xe9tiquette emplacement')),
                ('etiquette_emplacement_machine_flash', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='etiquette_emplacement_machine_flash', to='stock_labo.Impression', verbose_name='Etiquette emplacement machine flash')),
                ('etiquette_emplacement_machine_flash_imprimante', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='imprimante_etiquette_emplacement_machine_flash', to='stock_labo.ImpressionImprimante', verbose_name='Imprimante \xe9tiquette emplacement machine flash')),
                ('etiquette_login', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='etiquette_login', to='stock_labo.Impression', verbose_name='Etiquette login')),
                ('etiquette_login_imprimante', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='imprimante_etiquette_login', to='stock_labo.ImpressionImprimante', verbose_name='Imprimante \xe9tiquette login')),
                ('etiquette_lot', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='etiquette_lot', to='stock_labo.Impression', verbose_name='Etiquette lot')),
                ('etiquette_lot_imprimante', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='imprimante_etiquette_lot', to='stock_labo.ImpressionImprimante', verbose_name='Imprimante \xe9tiquette lot')),
                ('etiquette_nomenclature', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='etiquette_nomenclature', to='stock_labo.Impression', verbose_name='Etiquette article')),
                ('etiquette_nomenclature_imprimante', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='imprimante_etiquette_nomenclature', to='stock_labo.ImpressionImprimante', verbose_name='Imprimante \xe9tiquette nomenclature')),
                ('magasin_perso', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='stock_labo.StockMagasin', verbose_name='Magasin personel par d\xe9faut')),
                ('site_perso', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='stock_labo.StockSite', verbose_name='Site personel par d\xe9faut')),
                ('unit_masse', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='stock_labo.UnitMasse', verbose_name='Unit\xe9')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Login Utilisateur')),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.AddField(
            model_name='siteentrepotmagasin',
            name='entrepot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock_labo.StockEntrepot', verbose_name='Entrepot'),
        ),
        migrations.AddField(
            model_name='siteentrepotmagasin',
            name='magasin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock_labo.StockMagasin', verbose_name='Magasin'),
        ),
        migrations.AddField(
            model_name='siteentrepotmagasin',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock_labo.StockSite', verbose_name='Site'),
        ),
        migrations.AddField(
            model_name='nomenclature',
            name='nomenclature_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock_labo.NomenclatureType', verbose_name='Type'),
        ),
        migrations.AddField(
            model_name='nomenclature',
            name='reception_entrepot',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='stock_labo.StockEntrepot', verbose_name='Stock de stockage par d\xe9faut'),
        ),
        migrations.AddField(
            model_name='nomenclature',
            name='reception_magasin',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='stock_labo.StockMagasin', verbose_name='Magasin de stockage par d\xe9faut'),
        ),
        migrations.AddField(
            model_name='nomenclature',
            name='reception_site',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='stock_labo.StockSite', verbose_name='Site de stockage par d\xe9faut'),
        ),
        migrations.AddField(
            model_name='nomenclature',
            name='responsable_flash_point',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nomenclature_responsable_fp', to=settings.AUTH_USER_MODEL, verbose_name='Responsable Flash'),
        ),
        migrations.AddField(
            model_name='impressionimprimante',
            name='param_post_impression',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='param_prost_impression', to='stock_labo.ImpressionImprimanteParam'),
        ),
        migrations.AddField(
            model_name='impressionimprimante',
            name='param_pre_impression',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='param_pre_impression', to='stock_labo.ImpressionImprimanteParam'),
        ),
        migrations.AddField(
            model_name='flashpointmachine',
            name='nomenclature_lot',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock_labo.NomenclatureLot', verbose_name='Article/Lot'),
        ),
        migrations.AddField(
            model_name='contenant',
            name='actuel_entrepot',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='stock_labo.StockEntrepot', verbose_name='Entrep\xf4t actuel'),
        ),
        migrations.AddField(
            model_name='contenant',
            name='actuel_magasin',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='stock_labo.StockMagasin', verbose_name='Magasin actuel'),
        ),
        migrations.AddField(
            model_name='contenant',
            name='actuel_site',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='stock_labo.StockSite', verbose_name='Site actuel'),
        ),
        migrations.AddField(
            model_name='contenant',
            name='nomenclature_lot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock_labo.NomenclatureLot', verbose_name='Article/Lot'),
        ),
        migrations.AddField(
            model_name='contenant',
            name='panier_user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='panier_user', to=settings.AUTH_USER_MODEL, verbose_name='Panier utilisateur'),
        ),
        migrations.AddField(
            model_name='contenant',
            name='provenance_site',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='provenance_site', to='stock_labo.StockSite', verbose_name='Site de provenance'),
        ),
        migrations.AddField(
            model_name='contenant',
            name='responsable_creation',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsable_creation', to=settings.AUTH_USER_MODEL, verbose_name='Responsable de cr\xe9ation'),
        ),
        migrations.AddField(
            model_name='contenant',
            name='responsable_mouvement',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsable_mouvement', to=settings.AUTH_USER_MODEL, verbose_name='Responsable dernier mouvement'),
        ),
        migrations.AddField(
            model_name='contenant',
            name='responsable_suppression',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsable_suppression', to=settings.AUTH_USER_MODEL, verbose_name='Responsable de suppression'),
        ),
        migrations.AddField(
            model_name='contenant',
            name='stock_entrepot',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='stock_entrepot', to='stock_labo.StockEntrepot', verbose_name='Entrep\xf4t de stockage'),
        ),
        migrations.AddField(
            model_name='contenant',
            name='stock_magasin',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='stock_magasin', to='stock_labo.StockMagasin', verbose_name='Magasin de stockage'),
        ),
        migrations.AddField(
            model_name='contenant',
            name='stock_site',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='stock_site', to='stock_labo.StockSite', verbose_name='Site de stockage'),
        ),
        migrations.AddField(
            model_name='contenant',
            name='type_contenant',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='stock_labo.ContenantType', verbose_name='Type de Contenant'),
        ),
    ]
